---
- name: Update OS package caches for Debian
  apt:
    update_cache: yes
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - dbdump
    - dbdump-update-packages
    - webserver
    - appserver
    - dbserver

- name: Update OS package caches for CentOS
  dnf:
    update_cache: yes
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - dbdump
    - dbdump-update-packages
    - webserver
    - appserver
    - dbserver

- name: Update OS packages
  package:
    name: '*'
    state: latest
  tags:
    - dbdump
    - dbdump-update-packages
    - webserver
    - appserver
    - dbserver

# For Ubuntu
- name: Install OS packages for Debain
  package:
    name: "{{ dbdump_debian_install }}"
    state: latest
  when: ansible_facts['os_family'] == 'Debian'
  tags:
    - dbdump
    - dbdump-install-packages
    - webserver
    - appserver
    - dbserver

# For CentOS
- name: Install OS packages for CentOS
  package:
    name: "{{ dbdump_redhat_install }}"
    state: latest
  when: ansible_facts['os_family'] == 'RedHat'
  tags:
    - dbdump
    - dbdump-install-packages
    - webserver
    - appserver
    - dbserver

- name: Create dbdump script directory
  file:
    path: "{{ dbdump_script_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - dbdump
    - dbdump-create-dbdump-script-directory
    - webserver
    - appserver
    - dbserver

- name: Configure a dbdump script
  template:
    src: "{{ dbdump_script_path.lstrip('/') }}.j2"
    dest: "{{ dbdump_script_path }}"
    owner: root
    group: root
    mode: 0755
  tags:
    - dbdump
    - dbdump-configure-script
    - webserver
    - appserver
    - dbserver

- name: Copy password file
  copy:
    src: "{{ dbdump_password_file.lstrip('/') }}"
    dest: "{{ dbdump_password_file }}"
    owner: root
    group: root
    mode: 0600
  when:
    - dbdump_password_file | length > 0
  tags:
    - dbdump
    - dbdump-create-database-password-file
    - webserver
    - appserver
    - dbserver

# Reference: https://opensource.com/article/20/7/systemd-timers
- name: Create dbdump services
  template:
    src: "{{ item.lstrip('/') }}.j2"
    dest: "{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - "{{ dbdump_service_path }}"
    - "{{ dbdump_timer_path }}"
  tags:
    - dbdump
    - dbdump-create-dbdump-services
    - webserver
    - appserver
    - dbserver

- name: Check dbdump timer exists
  stat:
    path: "{{ dbdump_timer_path }}"
  register: dbdump_timer_path_result
  tags:
    - dbdump
    - dbdump-check-dbdump-timer
    - webserver
    - appserver
    - dbserver

- name: Enable dbdump timer
  systemd:
    name: "{{ dbdump_timer_name }}"
    state: started
    enabled: true
    daemon-reload: true
  when: dbdump_timer_path_result.stat.exists
  tags:
    - dbdump
    - dbdump-enable-dbdump-timer
    - webserver
    - appserver
    - dbserver
